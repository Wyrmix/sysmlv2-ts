/**
 * Systems Modeling API and Services
 * REST/HTTP platform specific model (PSM) for the Systems Modeling API and Services
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import type { Commit, CommitRequest, DataVersion } from '../models';
export interface GetChangeByProjectCommitIdRequest {
    projectId: any;
    commitId: any;
    changeId: any;
}
export interface GetChangesByProjectCommitRequest {
    projectId: any;
    commitId: any;
    pageAfter?: any;
    pageBefore?: any;
    pageSize?: any;
}
export interface GetCommitByProjectAndIdRequest {
    projectId: any;
    commitId: any;
}
export interface GetCommitsByProjectRequest {
    projectId: any;
    pageAfter?: any;
    pageBefore?: any;
    pageSize?: any;
}
export interface PostCommitByProjectRequest {
    projectId: any;
    commitRequest: CommitRequest;
    branchId?: any;
}
/**
 *
 */
export declare class CommitApi extends runtime.BaseAPI {
    /**
     * Get change by project, commit and ID
     */
    getChangeByProjectCommitIdRaw(requestParameters: GetChangeByProjectCommitIdRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<DataVersion>>;
    /**
     * Get change by project, commit and ID
     */
    getChangeByProjectCommitId(requestParameters: GetChangeByProjectCommitIdRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<DataVersion>;
    /**
     * Get changes by project and commit
     */
    getChangesByProjectCommitRaw(requestParameters: GetChangesByProjectCommitRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<any>>;
    /**
     * Get changes by project and commit
     */
    getChangesByProjectCommit(requestParameters: GetChangesByProjectCommitRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<any>;
    /**
     * Get commit by project and ID
     */
    getCommitByProjectAndIdRaw(requestParameters: GetCommitByProjectAndIdRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Commit>>;
    /**
     * Get commit by project and ID
     */
    getCommitByProjectAndId(requestParameters: GetCommitByProjectAndIdRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Commit>;
    /**
     * Get commits by project
     */
    getCommitsByProjectRaw(requestParameters: GetCommitsByProjectRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<any>>;
    /**
     * Get commits by project
     */
    getCommitsByProject(requestParameters: GetCommitsByProjectRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<any>;
    /**
     * Create commit by project
     */
    postCommitByProjectRaw(requestParameters: PostCommitByProjectRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Commit>>;
    /**
     * Create commit by project
     */
    postCommitByProject(requestParameters: PostCommitByProjectRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Commit>;
}
