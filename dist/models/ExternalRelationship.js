"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Systems Modeling API and Services
 * REST/HTTP platform specific model (PSM) for the Systems Modeling API and Services
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ExternalRelationshipToJSON = exports.ExternalRelationshipFromJSONTyped = exports.ExternalRelationshipFromJSON = exports.instanceOfExternalRelationship = void 0;
const Identified_1 = require("./Identified");
/**
 * Check if a given object implements the ExternalRelationship interface.
 */
function instanceOfExternalRelationship(value) {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "elementEnd" in value;
    isInstance = isInstance && "externalDataEnd" in value;
    isInstance = isInstance && "language" in value;
    isInstance = isInstance && "specification" in value;
    return isInstance;
}
exports.instanceOfExternalRelationship = instanceOfExternalRelationship;
function ExternalRelationshipFromJSON(json) {
    return ExternalRelationshipFromJSONTyped(json, false);
}
exports.ExternalRelationshipFromJSON = ExternalRelationshipFromJSON;
function ExternalRelationshipFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'id': json['@id'],
        'atType': json['@type'],
        'elementEnd': (0, Identified_1.IdentifiedFromJSON)(json['elementEnd']),
        'externalDataEnd': (0, Identified_1.IdentifiedFromJSON)(json['externalDataEnd']),
        'language': json['language'],
        'specification': json['specification'],
    };
}
exports.ExternalRelationshipFromJSONTyped = ExternalRelationshipFromJSONTyped;
function ExternalRelationshipToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        '@id': value.id,
        '@type': value.atType,
        'elementEnd': (0, Identified_1.IdentifiedToJSON)(value.elementEnd),
        'externalDataEnd': (0, Identified_1.IdentifiedToJSON)(value.externalDataEnd),
        'language': value.language,
        'specification': value.specification,
    };
}
exports.ExternalRelationshipToJSON = ExternalRelationshipToJSON;
