/* tslint:disable */
/* eslint-disable */
/**
 * Systems Modeling API and Services
 * REST/HTTP platform specific model (PSM) for the Systems Modeling API and Services
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';

export interface GetRelationshipsByProjectCommitRelatedElementRequest {
    projectId: any;
    commitId: any;
    relatedElementId: any;
    direction?: GetRelationshipsByProjectCommitRelatedElementDirectionEnum;
    excludeUsed?: any;
    pageAfter?: any;
    pageBefore?: any;
    pageSize?: any;
}

/**
 * 
 */
export class RelationshipApi extends runtime.BaseAPI {

    /**
     * Get relationships by project, commit, and related element
     */
    async getRelationshipsByProjectCommitRelatedElementRaw(requestParameters: GetRelationshipsByProjectCommitRelatedElementRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<any>> {
        if (requestParameters.projectId === null || requestParameters.projectId === undefined) {
            throw new runtime.RequiredError('projectId','Required parameter requestParameters.projectId was null or undefined when calling getRelationshipsByProjectCommitRelatedElement.');
        }

        if (requestParameters.commitId === null || requestParameters.commitId === undefined) {
            throw new runtime.RequiredError('commitId','Required parameter requestParameters.commitId was null or undefined when calling getRelationshipsByProjectCommitRelatedElement.');
        }

        if (requestParameters.relatedElementId === null || requestParameters.relatedElementId === undefined) {
            throw new runtime.RequiredError('relatedElementId','Required parameter requestParameters.relatedElementId was null or undefined when calling getRelationshipsByProjectCommitRelatedElement.');
        }

        const queryParameters: any = {};

        if (requestParameters.direction !== undefined) {
            queryParameters['direction'] = requestParameters.direction;
        }

        if (requestParameters.excludeUsed !== undefined) {
            queryParameters['excludeUsed'] = requestParameters.excludeUsed;
        }

        if (requestParameters.pageAfter !== undefined) {
            queryParameters['page[after]'] = requestParameters.pageAfter;
        }

        if (requestParameters.pageBefore !== undefined) {
            queryParameters['page[before]'] = requestParameters.pageBefore;
        }

        if (requestParameters.pageSize !== undefined) {
            queryParameters['page[size]'] = requestParameters.pageSize;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/projects/{projectId}/commits/{commitId}/elements/{relatedElementId}/relationships`.replace(`{${"projectId"}}`, encodeURIComponent(String(requestParameters.projectId))).replace(`{${"commitId"}}`, encodeURIComponent(String(requestParameters.commitId))).replace(`{${"relatedElementId"}}`, encodeURIComponent(String(requestParameters.relatedElementId))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.TextApiResponse(response) as any;
    }

    /**
     * Get relationships by project, commit, and related element
     */
    async getRelationshipsByProjectCommitRelatedElement(requestParameters: GetRelationshipsByProjectCommitRelatedElementRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<any> {
        const response = await this.getRelationshipsByProjectCommitRelatedElementRaw(requestParameters, initOverrides);
        return await response.value();
    }

}

/**
 * @export
 */
export const GetRelationshipsByProjectCommitRelatedElementDirectionEnum = {
    In: 'in',
    Out: 'out',
    Both: 'both'
} as const;
export type GetRelationshipsByProjectCommitRelatedElementDirectionEnum = typeof GetRelationshipsByProjectCommitRelatedElementDirectionEnum[keyof typeof GetRelationshipsByProjectCommitRelatedElementDirectionEnum];
