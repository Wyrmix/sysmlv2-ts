/* tslint:disable */
/* eslint-disable */
/**
 * Systems Modeling API and Services
 * REST/HTTP platform specific model (PSM) for the Systems Modeling API and Services
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Identified } from './Identified';
import {
    IdentifiedFromJSON,
    IdentifiedFromJSONTyped,
    IdentifiedToJSON,
} from './Identified';

/**
 * 
 * @export
 * @interface ProjectRequest
 */
export interface ProjectRequest {
    /**
     * 
     * @type {any}
     * @memberof ProjectRequest
     */
     atType?: any | null;
    /**
     * 
     * @type {Identified}
     * @memberof ProjectRequest
     */
    defaultBranch?: Identified;
    /**
     * 
     * @type {any}
     * @memberof ProjectRequest
     */
    description?: any | null;
    /**
     * 
     * @type {any}
     * @memberof ProjectRequest
     */
    name: any | null;
}

/**
 * Check if a given object implements the ProjectRequest interface.
 */
export function instanceOfProjectRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;

    return isInstance;
}

export function ProjectRequestFromJSON(json: any): ProjectRequest {
    return ProjectRequestFromJSONTyped(json, false);
}

export function ProjectRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProjectRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'atType': !exists(json, '@type') ? undefined : json['@type'],
        'defaultBranch': !exists(json, 'defaultBranch') ? undefined : IdentifiedFromJSON(json['defaultBranch']),
        'description': !exists(json, 'description') ? undefined : json['description'],
        'name': json['name'],
    };
}

export function ProjectRequestToJSON(value?: ProjectRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        '@type': value.atType,
        'defaultBranch': IdentifiedToJSON(value.defaultBranch),
        'description': value.description,
        'name': value.name,
    };
}

