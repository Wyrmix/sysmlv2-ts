/* tslint:disable */
/* eslint-disable */
/**
 * Systems Modeling API and Services
 * REST/HTTP platform specific model (PSM) for the Systems Modeling API and Services
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface GetDatatypeById200Response
 */
export interface GetDatatypeById200Response {
    [key: string]: any | any;
    /**
     * 
     * @type {any}
     * @memberof GetDatatypeById200Response
     */
    $schema: any | null;
    /**
     * 
     * @type {any}
     * @memberof GetDatatypeById200Response
     */
    $id: any | null;
    /**
     * 
     * @type {{ [key: string]: any; }}
     * @memberof GetDatatypeById200Response
     */
    $defs?: { [key: string]: any; } | null;
    /**
     * 
     * @type {any}
     * @memberof GetDatatypeById200Response
     */
    title: any | null;
    /**
     * 
     * @type {any}
     * @memberof GetDatatypeById200Response
     */
    atType: any | null;
    /**
     * 
     * @type {{ [key: string]: any; }}
     * @memberof GetDatatypeById200Response
     */
    properties: { [key: string]: any; } | null;
    /**
     * 
     * @type {any}
     * @memberof GetDatatypeById200Response
     */
    required?: any | null;
    /**
     * 
     * @type {any}
     * @memberof GetDatatypeById200Response
     */
    additionalProperties?: any | null;
}

/**
 * Check if a given object implements the GetDatatypeById200Response interface.
 */
export function instanceOfGetDatatypeById200Response(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "$schema" in value;
    isInstance = isInstance && "$id" in value;
    isInstance = isInstance && "title" in value;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "properties" in value;

    return isInstance;
}

export function GetDatatypeById200ResponseFromJSON(json: any): GetDatatypeById200Response {
    return GetDatatypeById200ResponseFromJSONTyped(json, false);
}

export function GetDatatypeById200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetDatatypeById200Response {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
            ...json,
        '$schema': json['$schema'],
        '$id': json['$id'],
        '$defs': !exists(json, '$defs') ? undefined : json['$defs'],
        'title': json['title'],
        'type': json['type'],
        'properties': json['properties'],
        'required': !exists(json, 'required') ? undefined : json['required'],
        'additionalProperties': !exists(json, 'additionalProperties') ? undefined : json['additionalProperties'],
    };
}

export function GetDatatypeById200ResponseToJSON(value?: GetDatatypeById200Response | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
            ...value,
        '$schema': value.$schema,
        '$id': value.$id,
        '$defs': value.$defs,
        'title': value.title,
        'type': value.type,
        'properties': value.properties,
        'required': value.required,
        'additionalProperties': value.additionalProperties,
    };
}

