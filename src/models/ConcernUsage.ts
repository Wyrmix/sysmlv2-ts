/* tslint:disable */
/* eslint-disable */
/**
 * Systems Modeling API and Services
 * REST/HTTP platform specific model (PSM) for the Systems Modeling API and Services
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Identified } from './Identified';
import {
    IdentifiedFromJSON,
    IdentifiedFromJSONTyped,
    IdentifiedToJSON,
} from './Identified';

/**
 * 
 * @export
 * @interface ConcernUsage
 */
export interface ConcernUsage {
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    id: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    atType: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    actorParameter: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    aliasIds: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    assumedConstraint: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    behavior: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    chainingFeature: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    concernDefinition: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    constraintDefinition: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    declaredName: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    declaredShortName: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    definition: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    differencingType: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    directedFeature: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    directedUsage: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    direction: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    documentation: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    elementId: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    endFeature: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    endOwningType: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    feature: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    featureMembership: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    featuringType: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    framedConcern: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    _function: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    importedMembership: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    individualDefinition: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    inheritedFeature: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    inheritedMembership: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    input: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    intersectingType: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    isAbstract: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    isComposite: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    isConjugated: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    isDerived: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    isEnd: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    isImpliedIncluded: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    isIndividual: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    isLibraryElement: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    isModelLevelEvaluable: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    isOrdered: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    isPortion: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    isReadOnly: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    isReference: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    isSufficient: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    isUnique: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    isVariation: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    member: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    membership: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    multiplicity: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    name: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    nestedAction: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    nestedAllocation: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    nestedAnalysisCase: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    nestedAttribute: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    nestedCalculation: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    nestedCase: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    nestedConcern: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    nestedConnection: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    nestedConstraint: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    nestedEnumeration: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    nestedFlow: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    nestedInterface: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    nestedItem: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    nestedMetadata: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    nestedOccurrence: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    nestedPart: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    nestedPort: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    nestedReference: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    nestedRendering: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    nestedRequirement: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    nestedState: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    nestedTransition: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    nestedUsage: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    nestedUseCase: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    nestedVerificationCase: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    nestedView: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    nestedViewpoint: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    occurrenceDefinition: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    output: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    ownedAnnotation: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    ownedConjugator: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    ownedDifferencing: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    ownedDisjoining: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    ownedElement: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    ownedEndFeature: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    ownedFeature: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    ownedFeatureChaining: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    ownedFeatureInverting: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    ownedFeatureMembership: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    ownedImport: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    ownedIntersecting: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    ownedMember: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    ownedMembership: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    ownedRedefinition: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    ownedReferenceSubsetting: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    ownedRelationship: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    ownedSpecialization: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    ownedSubsetting: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    ownedTypeFeaturing: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    ownedTyping: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    ownedUnioning: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    owner: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    owningDefinition: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    owningFeatureMembership: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    owningMembership: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    owningNamespace: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    owningRelationship: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    owningType: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    owningUsage: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    parameter: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    portionKind: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    portioningFeature: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    predicate: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    qualifiedName: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    reqId: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    requiredConstraint: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    requirementDefinition: any | null;
    /**
     * 
     * @type {Identified}
     * @memberof ConcernUsage
     */
    result: Identified;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    shortName: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    stakeholderParameter: any | null;
    /**
     * 
     * @type {Identified}
     * @memberof ConcernUsage
     */
    subjectParameter: Identified;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    text: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    textualRepresentation: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
     type: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    unioningType: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    usage: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    variant: any | null;
    /**
     * 
     * @type {any}
     * @memberof ConcernUsage
     */
    variantMembership: any | null;
}

/**
 * Check if a given object implements the ConcernUsage interface.
 */
export function instanceOfConcernUsage(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "actorParameter" in value;
    isInstance = isInstance && "aliasIds" in value;
    isInstance = isInstance && "assumedConstraint" in value;
    isInstance = isInstance && "behavior" in value;
    isInstance = isInstance && "chainingFeature" in value;
    isInstance = isInstance && "concernDefinition" in value;
    isInstance = isInstance && "constraintDefinition" in value;
    isInstance = isInstance && "declaredName" in value;
    isInstance = isInstance && "declaredShortName" in value;
    isInstance = isInstance && "definition" in value;
    isInstance = isInstance && "differencingType" in value;
    isInstance = isInstance && "directedFeature" in value;
    isInstance = isInstance && "directedUsage" in value;
    isInstance = isInstance && "direction" in value;
    isInstance = isInstance && "documentation" in value;
    isInstance = isInstance && "elementId" in value;
    isInstance = isInstance && "endFeature" in value;
    isInstance = isInstance && "endOwningType" in value;
    isInstance = isInstance && "feature" in value;
    isInstance = isInstance && "featureMembership" in value;
    isInstance = isInstance && "featuringType" in value;
    isInstance = isInstance && "framedConcern" in value;
    isInstance = isInstance && "_function" in value;
    isInstance = isInstance && "importedMembership" in value;
    isInstance = isInstance && "individualDefinition" in value;
    isInstance = isInstance && "inheritedFeature" in value;
    isInstance = isInstance && "inheritedMembership" in value;
    isInstance = isInstance && "input" in value;
    isInstance = isInstance && "intersectingType" in value;
    isInstance = isInstance && "isAbstract" in value;
    isInstance = isInstance && "isComposite" in value;
    isInstance = isInstance && "isConjugated" in value;
    isInstance = isInstance && "isDerived" in value;
    isInstance = isInstance && "isEnd" in value;
    isInstance = isInstance && "isImpliedIncluded" in value;
    isInstance = isInstance && "isIndividual" in value;
    isInstance = isInstance && "isLibraryElement" in value;
    isInstance = isInstance && "isModelLevelEvaluable" in value;
    isInstance = isInstance && "isOrdered" in value;
    isInstance = isInstance && "isPortion" in value;
    isInstance = isInstance && "isReadOnly" in value;
    isInstance = isInstance && "isReference" in value;
    isInstance = isInstance && "isSufficient" in value;
    isInstance = isInstance && "isUnique" in value;
    isInstance = isInstance && "isVariation" in value;
    isInstance = isInstance && "member" in value;
    isInstance = isInstance && "membership" in value;
    isInstance = isInstance && "multiplicity" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "nestedAction" in value;
    isInstance = isInstance && "nestedAllocation" in value;
    isInstance = isInstance && "nestedAnalysisCase" in value;
    isInstance = isInstance && "nestedAttribute" in value;
    isInstance = isInstance && "nestedCalculation" in value;
    isInstance = isInstance && "nestedCase" in value;
    isInstance = isInstance && "nestedConcern" in value;
    isInstance = isInstance && "nestedConnection" in value;
    isInstance = isInstance && "nestedConstraint" in value;
    isInstance = isInstance && "nestedEnumeration" in value;
    isInstance = isInstance && "nestedFlow" in value;
    isInstance = isInstance && "nestedInterface" in value;
    isInstance = isInstance && "nestedItem" in value;
    isInstance = isInstance && "nestedMetadata" in value;
    isInstance = isInstance && "nestedOccurrence" in value;
    isInstance = isInstance && "nestedPart" in value;
    isInstance = isInstance && "nestedPort" in value;
    isInstance = isInstance && "nestedReference" in value;
    isInstance = isInstance && "nestedRendering" in value;
    isInstance = isInstance && "nestedRequirement" in value;
    isInstance = isInstance && "nestedState" in value;
    isInstance = isInstance && "nestedTransition" in value;
    isInstance = isInstance && "nestedUsage" in value;
    isInstance = isInstance && "nestedUseCase" in value;
    isInstance = isInstance && "nestedVerificationCase" in value;
    isInstance = isInstance && "nestedView" in value;
    isInstance = isInstance && "nestedViewpoint" in value;
    isInstance = isInstance && "occurrenceDefinition" in value;
    isInstance = isInstance && "output" in value;
    isInstance = isInstance && "ownedAnnotation" in value;
    isInstance = isInstance && "ownedConjugator" in value;
    isInstance = isInstance && "ownedDifferencing" in value;
    isInstance = isInstance && "ownedDisjoining" in value;
    isInstance = isInstance && "ownedElement" in value;
    isInstance = isInstance && "ownedEndFeature" in value;
    isInstance = isInstance && "ownedFeature" in value;
    isInstance = isInstance && "ownedFeatureChaining" in value;
    isInstance = isInstance && "ownedFeatureInverting" in value;
    isInstance = isInstance && "ownedFeatureMembership" in value;
    isInstance = isInstance && "ownedImport" in value;
    isInstance = isInstance && "ownedIntersecting" in value;
    isInstance = isInstance && "ownedMember" in value;
    isInstance = isInstance && "ownedMembership" in value;
    isInstance = isInstance && "ownedRedefinition" in value;
    isInstance = isInstance && "ownedReferenceSubsetting" in value;
    isInstance = isInstance && "ownedRelationship" in value;
    isInstance = isInstance && "ownedSpecialization" in value;
    isInstance = isInstance && "ownedSubsetting" in value;
    isInstance = isInstance && "ownedTypeFeaturing" in value;
    isInstance = isInstance && "ownedTyping" in value;
    isInstance = isInstance && "ownedUnioning" in value;
    isInstance = isInstance && "owner" in value;
    isInstance = isInstance && "owningDefinition" in value;
    isInstance = isInstance && "owningFeatureMembership" in value;
    isInstance = isInstance && "owningMembership" in value;
    isInstance = isInstance && "owningNamespace" in value;
    isInstance = isInstance && "owningRelationship" in value;
    isInstance = isInstance && "owningType" in value;
    isInstance = isInstance && "owningUsage" in value;
    isInstance = isInstance && "parameter" in value;
    isInstance = isInstance && "portionKind" in value;
    isInstance = isInstance && "portioningFeature" in value;
    isInstance = isInstance && "predicate" in value;
    isInstance = isInstance && "qualifiedName" in value;
    isInstance = isInstance && "reqId" in value;
    isInstance = isInstance && "requiredConstraint" in value;
    isInstance = isInstance && "requirementDefinition" in value;
    isInstance = isInstance && "result" in value;
    isInstance = isInstance && "shortName" in value;
    isInstance = isInstance && "stakeholderParameter" in value;
    isInstance = isInstance && "subjectParameter" in value;
    isInstance = isInstance && "text" in value;
    isInstance = isInstance && "textualRepresentation" in value;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "unioningType" in value;
    isInstance = isInstance && "usage" in value;
    isInstance = isInstance && "variant" in value;
    isInstance = isInstance && "variantMembership" in value;

    return isInstance;
}

export function ConcernUsageFromJSON(json: any): ConcernUsage {
    return ConcernUsageFromJSONTyped(json, false);
}

export function ConcernUsageFromJSONTyped(json: any, ignoreDiscriminator: boolean): ConcernUsage {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['@id'],
        'atType': json['@type'],
        'actorParameter': json['actorParameter'],
        'aliasIds': json['aliasIds'],
        'assumedConstraint': json['assumedConstraint'],
        'behavior': json['behavior'],
        'chainingFeature': json['chainingFeature'],
        'concernDefinition': json['concernDefinition'],
        'constraintDefinition': json['constraintDefinition'],
        'declaredName': json['declaredName'],
        'declaredShortName': json['declaredShortName'],
        'definition': json['definition'],
        'differencingType': json['differencingType'],
        'directedFeature': json['directedFeature'],
        'directedUsage': json['directedUsage'],
        'direction': json['direction'],
        'documentation': json['documentation'],
        'elementId': json['elementId'],
        'endFeature': json['endFeature'],
        'endOwningType': json['endOwningType'],
        'feature': json['feature'],
        'featureMembership': json['featureMembership'],
        'featuringType': json['featuringType'],
        'framedConcern': json['framedConcern'],
        '_function': json['function'],
        'importedMembership': json['importedMembership'],
        'individualDefinition': json['individualDefinition'],
        'inheritedFeature': json['inheritedFeature'],
        'inheritedMembership': json['inheritedMembership'],
        'input': json['input'],
        'intersectingType': json['intersectingType'],
        'isAbstract': json['isAbstract'],
        'isComposite': json['isComposite'],
        'isConjugated': json['isConjugated'],
        'isDerived': json['isDerived'],
        'isEnd': json['isEnd'],
        'isImpliedIncluded': json['isImpliedIncluded'],
        'isIndividual': json['isIndividual'],
        'isLibraryElement': json['isLibraryElement'],
        'isModelLevelEvaluable': json['isModelLevelEvaluable'],
        'isOrdered': json['isOrdered'],
        'isPortion': json['isPortion'],
        'isReadOnly': json['isReadOnly'],
        'isReference': json['isReference'],
        'isSufficient': json['isSufficient'],
        'isUnique': json['isUnique'],
        'isVariation': json['isVariation'],
        'member': json['member'],
        'membership': json['membership'],
        'multiplicity': json['multiplicity'],
        'name': json['name'],
        'nestedAction': json['nestedAction'],
        'nestedAllocation': json['nestedAllocation'],
        'nestedAnalysisCase': json['nestedAnalysisCase'],
        'nestedAttribute': json['nestedAttribute'],
        'nestedCalculation': json['nestedCalculation'],
        'nestedCase': json['nestedCase'],
        'nestedConcern': json['nestedConcern'],
        'nestedConnection': json['nestedConnection'],
        'nestedConstraint': json['nestedConstraint'],
        'nestedEnumeration': json['nestedEnumeration'],
        'nestedFlow': json['nestedFlow'],
        'nestedInterface': json['nestedInterface'],
        'nestedItem': json['nestedItem'],
        'nestedMetadata': json['nestedMetadata'],
        'nestedOccurrence': json['nestedOccurrence'],
        'nestedPart': json['nestedPart'],
        'nestedPort': json['nestedPort'],
        'nestedReference': json['nestedReference'],
        'nestedRendering': json['nestedRendering'],
        'nestedRequirement': json['nestedRequirement'],
        'nestedState': json['nestedState'],
        'nestedTransition': json['nestedTransition'],
        'nestedUsage': json['nestedUsage'],
        'nestedUseCase': json['nestedUseCase'],
        'nestedVerificationCase': json['nestedVerificationCase'],
        'nestedView': json['nestedView'],
        'nestedViewpoint': json['nestedViewpoint'],
        'occurrenceDefinition': json['occurrenceDefinition'],
        'output': json['output'],
        'ownedAnnotation': json['ownedAnnotation'],
        'ownedConjugator': json['ownedConjugator'],
        'ownedDifferencing': json['ownedDifferencing'],
        'ownedDisjoining': json['ownedDisjoining'],
        'ownedElement': json['ownedElement'],
        'ownedEndFeature': json['ownedEndFeature'],
        'ownedFeature': json['ownedFeature'],
        'ownedFeatureChaining': json['ownedFeatureChaining'],
        'ownedFeatureInverting': json['ownedFeatureInverting'],
        'ownedFeatureMembership': json['ownedFeatureMembership'],
        'ownedImport': json['ownedImport'],
        'ownedIntersecting': json['ownedIntersecting'],
        'ownedMember': json['ownedMember'],
        'ownedMembership': json['ownedMembership'],
        'ownedRedefinition': json['ownedRedefinition'],
        'ownedReferenceSubsetting': json['ownedReferenceSubsetting'],
        'ownedRelationship': json['ownedRelationship'],
        'ownedSpecialization': json['ownedSpecialization'],
        'ownedSubsetting': json['ownedSubsetting'],
        'ownedTypeFeaturing': json['ownedTypeFeaturing'],
        'ownedTyping': json['ownedTyping'],
        'ownedUnioning': json['ownedUnioning'],
        'owner': json['owner'],
        'owningDefinition': json['owningDefinition'],
        'owningFeatureMembership': json['owningFeatureMembership'],
        'owningMembership': json['owningMembership'],
        'owningNamespace': json['owningNamespace'],
        'owningRelationship': json['owningRelationship'],
        'owningType': json['owningType'],
        'owningUsage': json['owningUsage'],
        'parameter': json['parameter'],
        'portionKind': json['portionKind'],
        'portioningFeature': json['portioningFeature'],
        'predicate': json['predicate'],
        'qualifiedName': json['qualifiedName'],
        'reqId': json['reqId'],
        'requiredConstraint': json['requiredConstraint'],
        'requirementDefinition': json['requirementDefinition'],
        'result': IdentifiedFromJSON(json['result']),
        'shortName': json['shortName'],
        'stakeholderParameter': json['stakeholderParameter'],
        'subjectParameter': IdentifiedFromJSON(json['subjectParameter']),
        'text': json['text'],
        'textualRepresentation': json['textualRepresentation'],
        'type': json['type'],
        'unioningType': json['unioningType'],
        'usage': json['usage'],
        'variant': json['variant'],
        'variantMembership': json['variantMembership'],
    };
}

export function ConcernUsageToJSON(value?: ConcernUsage | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        '@id': value.id,
        '@type': value.atType,
        'actorParameter': value.actorParameter,
        'aliasIds': value.aliasIds,
        'assumedConstraint': value.assumedConstraint,
        'behavior': value.behavior,
        'chainingFeature': value.chainingFeature,
        'concernDefinition': value.concernDefinition,
        'constraintDefinition': value.constraintDefinition,
        'declaredName': value.declaredName,
        'declaredShortName': value.declaredShortName,
        'definition': value.definition,
        'differencingType': value.differencingType,
        'directedFeature': value.directedFeature,
        'directedUsage': value.directedUsage,
        'direction': value.direction,
        'documentation': value.documentation,
        'elementId': value.elementId,
        'endFeature': value.endFeature,
        'endOwningType': value.endOwningType,
        'feature': value.feature,
        'featureMembership': value.featureMembership,
        'featuringType': value.featuringType,
        'framedConcern': value.framedConcern,
        'function': value._function,
        'importedMembership': value.importedMembership,
        'individualDefinition': value.individualDefinition,
        'inheritedFeature': value.inheritedFeature,
        'inheritedMembership': value.inheritedMembership,
        'input': value.input,
        'intersectingType': value.intersectingType,
        'isAbstract': value.isAbstract,
        'isComposite': value.isComposite,
        'isConjugated': value.isConjugated,
        'isDerived': value.isDerived,
        'isEnd': value.isEnd,
        'isImpliedIncluded': value.isImpliedIncluded,
        'isIndividual': value.isIndividual,
        'isLibraryElement': value.isLibraryElement,
        'isModelLevelEvaluable': value.isModelLevelEvaluable,
        'isOrdered': value.isOrdered,
        'isPortion': value.isPortion,
        'isReadOnly': value.isReadOnly,
        'isReference': value.isReference,
        'isSufficient': value.isSufficient,
        'isUnique': value.isUnique,
        'isVariation': value.isVariation,
        'member': value.member,
        'membership': value.membership,
        'multiplicity': value.multiplicity,
        'name': value.name,
        'nestedAction': value.nestedAction,
        'nestedAllocation': value.nestedAllocation,
        'nestedAnalysisCase': value.nestedAnalysisCase,
        'nestedAttribute': value.nestedAttribute,
        'nestedCalculation': value.nestedCalculation,
        'nestedCase': value.nestedCase,
        'nestedConcern': value.nestedConcern,
        'nestedConnection': value.nestedConnection,
        'nestedConstraint': value.nestedConstraint,
        'nestedEnumeration': value.nestedEnumeration,
        'nestedFlow': value.nestedFlow,
        'nestedInterface': value.nestedInterface,
        'nestedItem': value.nestedItem,
        'nestedMetadata': value.nestedMetadata,
        'nestedOccurrence': value.nestedOccurrence,
        'nestedPart': value.nestedPart,
        'nestedPort': value.nestedPort,
        'nestedReference': value.nestedReference,
        'nestedRendering': value.nestedRendering,
        'nestedRequirement': value.nestedRequirement,
        'nestedState': value.nestedState,
        'nestedTransition': value.nestedTransition,
        'nestedUsage': value.nestedUsage,
        'nestedUseCase': value.nestedUseCase,
        'nestedVerificationCase': value.nestedVerificationCase,
        'nestedView': value.nestedView,
        'nestedViewpoint': value.nestedViewpoint,
        'occurrenceDefinition': value.occurrenceDefinition,
        'output': value.output,
        'ownedAnnotation': value.ownedAnnotation,
        'ownedConjugator': value.ownedConjugator,
        'ownedDifferencing': value.ownedDifferencing,
        'ownedDisjoining': value.ownedDisjoining,
        'ownedElement': value.ownedElement,
        'ownedEndFeature': value.ownedEndFeature,
        'ownedFeature': value.ownedFeature,
        'ownedFeatureChaining': value.ownedFeatureChaining,
        'ownedFeatureInverting': value.ownedFeatureInverting,
        'ownedFeatureMembership': value.ownedFeatureMembership,
        'ownedImport': value.ownedImport,
        'ownedIntersecting': value.ownedIntersecting,
        'ownedMember': value.ownedMember,
        'ownedMembership': value.ownedMembership,
        'ownedRedefinition': value.ownedRedefinition,
        'ownedReferenceSubsetting': value.ownedReferenceSubsetting,
        'ownedRelationship': value.ownedRelationship,
        'ownedSpecialization': value.ownedSpecialization,
        'ownedSubsetting': value.ownedSubsetting,
        'ownedTypeFeaturing': value.ownedTypeFeaturing,
        'ownedTyping': value.ownedTyping,
        'ownedUnioning': value.ownedUnioning,
        'owner': value.owner,
        'owningDefinition': value.owningDefinition,
        'owningFeatureMembership': value.owningFeatureMembership,
        'owningMembership': value.owningMembership,
        'owningNamespace': value.owningNamespace,
        'owningRelationship': value.owningRelationship,
        'owningType': value.owningType,
        'owningUsage': value.owningUsage,
        'parameter': value.parameter,
        'portionKind': value.portionKind,
        'portioningFeature': value.portioningFeature,
        'predicate': value.predicate,
        'qualifiedName': value.qualifiedName,
        'reqId': value.reqId,
        'requiredConstraint': value.requiredConstraint,
        'requirementDefinition': value.requirementDefinition,
        'result': IdentifiedToJSON(value.result),
        'shortName': value.shortName,
        'stakeholderParameter': value.stakeholderParameter,
        'subjectParameter': IdentifiedToJSON(value.subjectParameter),
        'text': value.text,
        'textualRepresentation': value.textualRepresentation,
        'type': value.type,
        'unioningType': value.unioningType,
        'usage': value.usage,
        'variant': value.variant,
        'variantMembership': value.variantMembership,
    };
}

